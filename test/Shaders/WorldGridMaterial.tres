[gd_resource type="VisualShader" load_steps=58 format=3 uid="uid://c72p1cp8nimvd"]

[ext_resource type="Texture2D" uid="uid://dr8hhpi5mid7n" path="res://test/Engine/EngineMaterials/T_Default_Material_Grid_M.png" id="1_mu74o"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_dsyoeyw2ecyut"]
default_input_values = [0, Vector3(1, 1, 1), 1, Vector3(0.1, 0.1, 0.1)]
operator = 3

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_dsx7d3jynvhnx"]
default_input_values = [0, Vector3(1, 1, 1), 1, Vector3(2, 2, 2)]
operator = 3

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_bx78ho2t276p5"]
input_name = "uv"

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_do8atsjyrial4"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(0, 0, 0), 2, Vector3(1, 1, 1)]
op_type = 4

[sub_resource type="VisualShaderNodeSwitch" id="VisualShaderNodeSwitch_5uqd44aqc2qi"]
default_input_values = [0, false, 1, Vector3(1, 1, 1), 2, Vector3(0, 0, 0)]
op_type = 4

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_h3y1yoas3oyj"]
default_input_values = [0, Vector3(1, 1, 1), 1, Vector3(2, 2, 2)]
operator = 3

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_cy04nybnpwtjs"]
default_input_values = [0, Vector3(1, 1, 1), 1, Vector3(1, 1, 1)]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_1353q4jva2i6"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1)]
operator = 2

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_b778ldr7wtm2l"]
size = Vector2(980, 290)
expression = "//Custom:18(CameraDepthFade)
output0 = length(x);"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_bola2ea53r735"]
default_input_values = [0, Vector3(1, 1, 1), 1, Vector3(1, 1, 1)]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_bb8hh7kpf8ou"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1)]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_c1autd44ylk1k"]
input_name = "camera_position_world"

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_b0o5sjjtvkv3y"]
size = Vector2(980, 670)
expression = "//WorldPosition:21(CameraDepthFade)
output0 = ( INV_VIEW_MATRIX * vec4( VERTEX, 1.0)).xyz;
//UE has cm units and thinks Z is up, this fixes it
output0 = output0 * 100.0;
output0 = output0.xzy;
output1 = output0.xy;
output2 = output0.z;
"

[sub_resource type="VisualShaderNodeDotProduct" id="VisualShaderNodeDotProduct_bf5b08gx7l1wc"]

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_3gxc4s1lvb7u"]
default_input_values = [0, Vector3(0, 1, 0)]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_bpcimxu3s7qkt"]
size = Vector2(980, 390)
expression = "//Transform
//Unimplemented
output0 =  input0;
"

[sub_resource type="VisualShaderNodeVec3Constant" id="VisualShaderNodeVec3Constant_dc6jysh7ogtty"]
expanded_output_ports = [0]
constant = Vector3(0, 0, -1)

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_cornjgsk1bl1y"]
constant = 24.0

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_dicd4j8pgjcb3"]
constant = 512.0

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_d257qaog37s6y"]
default_input_values = [0, Vector3(1, 1, 1), 1, Vector3(2, 2, 2)]
operator = 3

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_4xdidbppbm5h"]
default_input_values = [0, 1.0, 1, 1.0]
operator = 1

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_c02koneqe31mw"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_cmnbsi0t33xj3"]
size = Vector2(980, 260)
expression = "//PixelDepth:30(CameraDepthFade)
output0 =  FRAGCOORD.z;
"

[sub_resource type="VisualShaderNodeBooleanConstant" id="VisualShaderNodeBooleanConstant_clssnexl8y5lt"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_vx00hgplfwkb"]
constant = 1500.0

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_btjn1iki2wlxu"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(0.5, 0.5, 0.5)]
operator = 2

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_btbvbk62depyw"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_dgvacc8bg8cbd"]
constant = 0.295

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_dnocogbjuujr5"]
constant = 0.66

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_b277hlbc3edn3"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(0.5, 0.5, 0.5), 2, Vector3(0.875, 0.875, 0.875)]
op_type = 3

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_be62unpqiec42"]
size = Vector2(980, 340)
expression = "//ComponentMask:38(null)
output0 =  input0.r;
"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_usfrm6pl2dsj"]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_c013e4w6k6spi"]
default_input_values = [0, Vector3(0.4, 0.4, 0.4), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_cufduw474wnme"]
expanded_output_ports = [0]
texture = ExtResource("1_mu74o")

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_bj2ip43em05bk"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(0, 0, 0), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_5wpt4uvhwqev"]
constant = 0.5

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_df6oa0wtarulr"]
constant = 0.5

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_bj54wq4ltgayr"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1)]
operator = 2

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_b3ad4b8y1lwb8"]
size = Vector2(980, 1250)
expression = "//NormalTexture:45(null)
vec4 Normal45 = texture( input2, input0 );
Normal45 = Normal45 * vec4(2, 2, 2, 2) - vec4(1, 1, 1, 1);
output0 = Normal45.xyz;
output1 = Normal45.x;
output2 = Normal45.y;
output3 = Normal45.z;
output3 = Normal45.w;
output5 = Normal45;
"

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_b3ad7ewp7o3pu"]
parameter_name = "Generated_T_Default_Material_Grid_N"
texture_type = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_m8vgka63h150"]
default_input_values = [0, Vector3(1, 1, 1), 1, Vector3(0.05, 0.05, 0.05)]
operator = 3

[sub_resource type="VisualShaderNodeVec3Constant" id="VisualShaderNodeVec3Constant_cbm2pxnol6t1t"]
expanded_output_ports = [0]
constant = Vector3(0.3, 0.3, 1)

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_dyi3b8rbovvy0"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(0, 0, 0), 2, Vector3(1, 1, 1)]
op_type = 4

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_cuj2e386x75"]
expanded_output_ports = [0]
texture = ExtResource("1_mu74o")

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_lgrjsg6h8jme"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1)]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_bllgv6k4m38h"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(0.5, 0.5, 0.5), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_b3sy3iuboubkq"]
default_input_values = [0, Vector3(1, 1, 1), 1, Vector3(1, 1, 1)]
operator = 2

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_baqcuake3evx4"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_kslvj12b8sos"]
default_input_values = [0, Vector3(0.7, 0.7, 0.7), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_c6j1fi4i3v86o"]
constant = 1.0

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_bc16p7hrb5yda"]
size = Vector2(980, 260)
expression = "//Texcoords with tiling:6(null)
output0 = UV * vec2( 20.000000,20.000000 );
"

[sub_resource type="VisualShaderNodeMultiplyAdd" id="VisualShaderNodeMultiplyAdd_blp84701ep0xs"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(0.5, 0.5, 0.5), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 2

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_dbcj4sr0i05l7"]
function = 31

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_c02yl4g1kld5a"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_daobqm7oi02"]
expanded_output_ports = [0]
texture = ExtResource("1_mu74o")

[sub_resource type="VisualShaderNodeGlobalExpression" id="VisualShaderNodeGlobalExpression_cg3un2uk2vor7"]
size = Vector2(940, 380)
expression = "//Exported with UnrealToGodot : https://www.fab.com/listings/61983625-664c-4308-9b26-edfd58d41002
float saturate(float val)
{
	return clamp( val, 0.0, 1.0 );
}
vec2 saturate2(vec2 val)
{
	return clamp( val, 0.0, 1.0 );
}
vec3 saturate3(vec3 val)
{
	return clamp( val, 0.0, 1.0 );
}
vec2 mul( mat2 mat, vec2 vector )
{
	return mat * vector;
}
float rcp(float val)
{
	return 1.0 / val;
}
void sincos( float x, out float s, out float c )
{
	s = sin(x);
	c = cos(x);
}
vec2 UnitVectorToOctahedron( vec3 Nparam )
{
Nparam.xy /= vec2( dot( vec3(1.0,1.0,1.0), abs(Nparam) ), dot( vec3(1.0,1.0,1.0), abs(Nparam) ) );
if( Nparam.z <= 0.0 )
{
	vec2 val = vec2(-1,-1);	if ( Nparam.x >= 0.0 && Nparam.y >= 0.0 ) val = vec2(1,1);	Nparam.xy = ( 1.0 - abs(Nparam.yx) ) * val;
}
return Nparam.xy;
}
vec3 RotateAboutAxis(vec4 NormalizedRotationAxisAndAngle, vec3 PositionOnAxis, vec3 Position)
{
vec3 ClosestPointOnAxis = PositionOnAxis + NormalizedRotationAxisAndAngle.xyz * dot(NormalizedRotationAxisAndAngle.xyz, Position - PositionOnAxis);
vec3 UAxis = Position - ClosestPointOnAxis;
vec3 VAxis = cross(NormalizedRotationAxisAndAngle.xyz, UAxis);
float CosAngle;
float SinAngle;
sincos(NormalizedRotationAxisAndAngle.w, SinAngle, CosAngle); 
vec3 R = UAxis * CosAngle + VAxis * SinAngle;
vec3 RotatedPosition = ClosestPointOnAxis + R;
return RotatedPosition - Position;
}
vec3 hash_noise_range_UTG( vec3 p ) {
p *= mat3(vec3(127.1, 311.7, -53.7), vec3(269.5, 183.3, 77.1), vec3(-301.7, 27.3, 215.3));
return 2.0 * fract(fract(p)*4375.55) -1.;
}
"

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_disabled, diffuse_lambert, specular_schlick_ggx, depth_prepass_alpha;

uniform sampler2D tex_frg_5;
uniform sampler2D tex_frg_9;
uniform sampler2D tex_frg_40;
uniform sampler2D Generated_T_Default_Material_Grid_N : hint_normal;


// GlobalExpression:0
	//Exported with UnrealToGodot : https://www.fab.com/listings/61983625-664c-4308-9b26-edfd58d41002
	float saturate(float val)
	{
		return clamp( val, 0.0, 1.0 );
	}
	vec2 saturate2(vec2 val)
	{
		return clamp( val, 0.0, 1.0 );
	}
	vec3 saturate3(vec3 val)
	{
		return clamp( val, 0.0, 1.0 );
	}
	vec2 mul( mat2 mat, vec2 vector )
	{
		return mat * vector;
	}
	float rcp(float val)
	{
		return 1.0 / val;
	}
	void sincos( float x, out float s, out float c )
	{
		s = sin(x);
		c = cos(x);
	}
	vec2 UnitVectorToOctahedron( vec3 Nparam )
	{
	Nparam.xy /= vec2( dot( vec3(1.0,1.0,1.0), abs(Nparam) ), dot( vec3(1.0,1.0,1.0), abs(Nparam) ) );
	if( Nparam.z <= 0.0 )
	{
		vec2 val = vec2(-1,-1);	if ( Nparam.x >= 0.0 && Nparam.y >= 0.0 ) val = vec2(1,1);	Nparam.xy = ( 1.0 - abs(Nparam.yx) ) * val;
	}
	return Nparam.xy;
	}
	vec3 RotateAboutAxis(vec4 NormalizedRotationAxisAndAngle, vec3 PositionOnAxis, vec3 Position)
	{
	vec3 ClosestPointOnAxis = PositionOnAxis + NormalizedRotationAxisAndAngle.xyz * dot(NormalizedRotationAxisAndAngle.xyz, Position - PositionOnAxis);
	vec3 UAxis = Position - ClosestPointOnAxis;
	vec3 VAxis = cross(NormalizedRotationAxisAndAngle.xyz, UAxis);
	float CosAngle;
	float SinAngle;
	sincos(NormalizedRotationAxisAndAngle.w, SinAngle, CosAngle); 
	vec3 R = UAxis * CosAngle + VAxis * SinAngle;
	vec3 RotatedPosition = ClosestPointOnAxis + R;
	return RotatedPosition - Position;
	}
	vec3 hash_noise_range_UTG( vec3 p ) {
	p *= mat3(vec3(127.1, 311.7, -53.7), vec3(269.5, 183.3, 77.1), vec3(-301.7, 27.3, 215.3));
	return 2.0 * fract(fract(p)*4375.55) -1.;
	}
	

void fragment() {
	vec2 n_out6p0;
// Expression:6
	n_out6p0 = vec2(0.0, 0.0);
	{
		//Texcoords with tiling:6(null)
		n_out6p0 = UV * vec2( 20.000000,20.000000 );
		
	}


// Texture2D:5
	vec4 n_out5p0 = texture(tex_frg_5, n_out6p0);
	float n_out5p1 = n_out5p0.r;


// Mix:4
	vec3 n_in4p0 = vec3(0.40000, 0.40000, 0.40000);
	vec3 n_in4p1 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out4p0 = mix(n_in4p0, n_in4p1, vec3(n_out5p1));


// FloatFunc:7
	float n_out7p0 = 1.0 - n_out4p0.x;


// Input:12
	vec2 n_out12p0 = UV;


// VectorOp:11
	vec3 n_in11p1 = vec3(2.00000, 2.00000, 2.00000);
	vec3 n_out11p0 = vec3(n_out12p0, 0.0) / n_in11p1;


// VectorOp:10
	vec3 n_in10p1 = vec3(0.10000, 0.10000, 0.10000);
	vec3 n_out10p0 = n_out11p0 / n_in10p1;


// Texture2D:9
	vec4 n_out9p0 = texture(tex_frg_9, vec2(n_out10p0.xy));
	float n_out9p2 = n_out9p0.g;


// BooleanConstant:31
	bool n_out31p0 = false;


// Input:20
	vec3 n_out20p0 = CAMERA_POSITION_WORLD;


	vec3 n_out21p0;
	vec2 n_out21p1;
	float n_out21p2;
// Expression:21
	n_out21p0 = vec3(0.0, 0.0, 0.0);
	n_out21p1 = vec2(0.0, 0.0);
	n_out21p2 = 0.0;
	{
		//WorldPosition:21(CameraDepthFade)
		n_out21p0 = ( INV_VIEW_MATRIX * vec4( VERTEX, 1.0)).xyz;
		//UE has cm units and thinks Z is up, this fixes it
		n_out21p0 = n_out21p0 * 100.0;
		n_out21p0 = n_out21p0.xzy;
		n_out21p1 = n_out21p0.xy;
		n_out21p2 = n_out21p0.z;
		
	}


// VectorOp:19
	vec3 n_out19p0 = n_out20p0 - n_out21p0;


	float n_out18p0;
// Expression:18
	n_out18p0 = 0.0;
	{
		//Custom:18(CameraDepthFade)
		n_out18p0 = length(n_out19p0);
	}


// VectorFunc:23
	vec3 n_out23p0 = normalize(n_out19p0);


// Vector3Constant:25
	vec3 n_out25p0 = vec3(0.000000, 0.000000, -1.000000);


	vec3 n_out24p0;
// Expression:24
	n_out24p0 = vec3(0.0, 0.0, 0.0);
	{
		//Transform
		//Unimplemented
		n_out24p0 =  n_out25p0;
		
	}


// DotProduct:22
	float n_out22p0 = dot(n_out23p0, n_out24p0);


// VectorOp:17
	vec3 n_out17p0 = vec3(n_out18p0) * vec3(n_out22p0);


// FloatConstant:26
	float n_out26p0 = 24.000000;


// VectorOp:16
	vec3 n_out16p0 = n_out17p0 - vec3(n_out26p0);


// FloatConstant:32
	float n_out32p0 = 1500.000000;


// VectorOp:15
	vec3 n_out15p0 = n_out16p0 / vec3(n_out32p0);


	float n_out30p0;
// Expression:30
	n_out30p0 = 0.0;
	{
		//PixelDepth:30(CameraDepthFade)
		n_out30p0 =  FRAGCOORD.z;
		
	}


// FloatOp:29
	float n_out29p0 = n_out30p0 - n_out26p0;


// VectorOp:28
	vec3 n_out28p0 = vec3(n_out29p0) / vec3(n_out32p0);


	vec3 n_out14p0;
// Switch:14
	n_out14p0 = mix(n_out28p0, n_out15p0, float(n_out31p0));


// Clamp:13
	vec3 n_in13p1 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in13p2 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out13p0 = clamp(n_out14p0, n_in13p1, n_in13p2);


// Mix:8
	vec3 n_in8p1 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out8p0 = mix(vec3(n_out9p2), n_in8p1, n_out13p0);


// Mix:3
	vec3 n_out3p0 = mix(n_out4p0, vec3(n_out7p0), n_out8p0);


// FloatConstant:35
	float n_out35p0 = 0.295000;


// FloatConstant:36
	float n_out36p0 = 0.660000;


// Texture2D:40
	vec4 n_out40p0 = texture(tex_frg_40, vec2(n_out11p0.xy));
	float n_out40p2 = n_out40p0.g;


// Mix:41
	vec3 n_in41p1 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out41p0 = mix(vec3(n_out9p2), n_in41p1, n_out13p0);


// VectorOp:39
	vec3 n_out39p0 = vec3(n_out40p2) + n_out41p0;


	float n_out38p0;
// Expression:38
	n_out38p0 = 0.0;
	{
		//ComponentMask:38(null)
		n_out38p0 =  vec4(n_out39p0, 0.0).r;
		
	}


// FloatConstant:42
	float n_out42p0 = 0.500000;


// Mix:37
	vec3 n_in37p1 = vec3(0.50000, 0.50000, 0.50000);
	vec3 n_out37p0 = mix(vec3(n_out38p0), n_in37p1, vec3(n_out42p0));


// Mix:34
	float n_out34p0 = mix(n_out35p0, n_out36p0, n_out37p0.x);


// FloatConstant:43
	float n_out43p0 = 0.500000;


// VectorOp:33
	vec3 n_out33p0 = vec3(n_out34p0) * vec3(n_out43p0);


// VectorOp:2
	vec3 n_out2p0 = n_out3p0 * n_out33p0;


// Mix:51
	vec3 n_in51p0 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in51p1 = vec3(0.50000, 0.50000, 0.50000);
	vec3 n_out51p0 = mix(n_in51p0, n_in51p1, vec3(n_out40p2));


// Mix:54
	vec3 n_in54p0 = vec3(0.70000, 0.70000, 0.70000);
	vec3 n_in54p1 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out54p0 = mix(n_in54p0, n_in54p1, vec3(n_out9p2));


// FloatConstant:55
	float n_out55p0 = 1.000000;


// Mix:53
	vec3 n_out53p0 = mix(n_out54p0, vec3(n_out55p0), n_out13p0);


// VectorOp:52
	vec3 n_in52p1 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out52p0 = n_out53p0 * n_in52p1;


// VectorOp:50
	vec3 n_out50p0 = n_out51p0 + n_out52p0;


// Clamp:49
	vec3 n_in49p1 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in49p2 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out49p0 = clamp(n_out50p0, n_in49p1, n_in49p2);


// VectorOp:47
	vec3 n_in47p1 = vec3(0.05000, 0.05000, 0.05000);
	vec3 n_out47p0 = n_out11p0 / n_in47p1;


	vec3 n_out45p0;
	float n_out45p1;
	float n_out45p2;
	float n_out45p3;
	float n_out45p4;
	vec4 n_out45p5;
// Expression:45
	n_out45p0 = vec3(0.0, 0.0, 0.0);
	n_out45p1 = 0.0;
	n_out45p2 = 0.0;
	n_out45p3 = 0.0;
	n_out45p4 = 0.0;
	n_out45p5 = vec4(0.0, 0.0, 0.0, 0.0);
	{
		//NormalTexture:45(null)
		vec4 Normal45 = texture( Generated_T_Default_Material_Grid_N, vec2(n_out47p0.xy) );
		Normal45 = Normal45 * vec4(2, 2, 2, 2) - vec4(1, 1, 1, 1);
		n_out45p0 = Normal45.xyz;
		n_out45p1 = Normal45.x;
		n_out45p2 = Normal45.y;
		n_out45p3 = Normal45.z;
		n_out45p3 = Normal45.w;
		n_out45p5 = Normal45;
		
	}


// Vector3Constant:48
	vec3 n_out48p0 = vec3(0.300000, 0.300000, 1.000000);


// VectorOp:44
	vec3 n_out44p0 = n_out45p0 * n_out48p0;


// MultiplyAdd:66
	vec3 n_in66p1 = vec3(0.50000, 0.50000, 0.50000);
	vec3 n_in66p2 = vec3(0.50000, 0.50000, 0.50000);
	vec3 n_out66p0 = (n_out44p0 * n_in66p1) + n_in66p2;


// Output:0
	ALBEDO = n_out2p0;
	ROUGHNESS = n_out49p0.x;
	NORMAL_MAP = n_out66p0;


}
"
graph_offset = Vector2(-523.783, 120.943)
modes/cull = 2
flags/depth_prepass_alpha = true
nodes/vertex/0/position = Vector2(992, 16)
nodes/vertex/67/node = SubResource("VisualShaderNodeGlobalExpression_cg3un2uk2vor7")
nodes/vertex/67/position = Vector2(264, 288)
nodes/vertex/67/size = Vector2(940, 380)
nodes/vertex/67/input_ports = ""
nodes/vertex/67/output_ports = ""
nodes/vertex/67/expression = "//Exported with UnrealToGodot : https://www.fab.com/listings/61983625-664c-4308-9b26-edfd58d41002
float saturate(float val)
{
	return clamp( val, 0.0, 1.0 );
}
vec2 saturate2(vec2 val)
{
	return clamp( val, 0.0, 1.0 );
}
vec3 saturate3(vec3 val)
{
	return clamp( val, 0.0, 1.0 );
}
vec2 mul( mat2 mat, vec2 vector )
{
	return mat * vector;
}
float rcp(float val)
{
	return 1.0 / val;
}
void sincos( float x, out float s, out float c )
{
	s = sin(x);
	c = cos(x);
}
vec2 UnitVectorToOctahedron( vec3 Nparam )
{
Nparam.xy /= vec2( dot( vec3(1.0,1.0,1.0), abs(Nparam) ), dot( vec3(1.0,1.0,1.0), abs(Nparam) ) );
if( Nparam.z <= 0.0 )
{
	vec2 val = vec2(-1,-1);	if ( Nparam.x >= 0.0 && Nparam.y >= 0.0 ) val = vec2(1,1);	Nparam.xy = ( 1.0 - abs(Nparam.yx) ) * val;
}
return Nparam.xy;
}
vec3 RotateAboutAxis(vec4 NormalizedRotationAxisAndAngle, vec3 PositionOnAxis, vec3 Position)
{
vec3 ClosestPointOnAxis = PositionOnAxis + NormalizedRotationAxisAndAngle.xyz * dot(NormalizedRotationAxisAndAngle.xyz, Position - PositionOnAxis);
vec3 UAxis = Position - ClosestPointOnAxis;
vec3 VAxis = cross(NormalizedRotationAxisAndAngle.xyz, UAxis);
float CosAngle;
float SinAngle;
sincos(NormalizedRotationAxisAndAngle.w, SinAngle, CosAngle); 
vec3 R = UAxis * CosAngle + VAxis * SinAngle;
vec3 RotatedPosition = ClosestPointOnAxis + R;
return RotatedPosition - Position;
}
vec3 hash_noise_range_UTG( vec3 p ) {
p *= mat3(vec3(127.1, 311.7, -53.7), vec3(269.5, 183.3, 77.1), vec3(-301.7, 27.3, 215.3));
return 2.0 * fract(fract(p)*4375.55) -1.;
}
"
nodes/fragment/0/position = Vector2(992, 16)
nodes/fragment/2/node = SubResource("VisualShaderNodeVectorOp_bb8hh7kpf8ou")
nodes/fragment/2/position = Vector2(456, -816)
nodes/fragment/3/node = SubResource("VisualShaderNodeMix_c02koneqe31mw")
nodes/fragment/3/position = Vector2(-1152, -1488)
nodes/fragment/4/node = SubResource("VisualShaderNodeMix_c013e4w6k6spi")
nodes/fragment/4/position = Vector2(-1656, -1488)
nodes/fragment/5/node = SubResource("VisualShaderNodeTexture_cuj2e386x75")
nodes/fragment/5/position = Vector2(-1920, -1488)
nodes/fragment/6/node = SubResource("VisualShaderNodeExpression_bc16p7hrb5yda")
nodes/fragment/6/position = Vector2(-2208, -1488)
nodes/fragment/6/size = Vector2(980, 260)
nodes/fragment/6/input_ports = ""
nodes/fragment/6/output_ports = "0,3,output0;"
nodes/fragment/6/expression = "//Texcoords with tiling:6(null)
output0 = UV * vec2( 20.000000,20.000000 );
"
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatFunc_dbcj4sr0i05l7")
nodes/fragment/7/position = Vector2(-1392, -1368)
nodes/fragment/8/node = SubResource("VisualShaderNodeMix_c02yl4g1kld5a")
nodes/fragment/8/position = Vector2(-1992, 984)
nodes/fragment/9/node = SubResource("VisualShaderNodeTexture_daobqm7oi02")
nodes/fragment/9/position = Vector2(-2424, 912)
nodes/fragment/10/node = SubResource("VisualShaderNodeVectorOp_dsyoeyw2ecyut")
nodes/fragment/10/position = Vector2(-2664, 936)
nodes/fragment/11/node = SubResource("VisualShaderNodeVectorOp_dsx7d3jynvhnx")
nodes/fragment/11/position = Vector2(-2904, 144)
nodes/fragment/12/node = SubResource("VisualShaderNodeInput_bx78ho2t276p5")
nodes/fragment/12/position = Vector2(-3216, 120)
nodes/fragment/13/node = SubResource("VisualShaderNodeClamp_do8atsjyrial4")
nodes/fragment/13/position = Vector2(-480, 672)
nodes/fragment/14/node = SubResource("VisualShaderNodeSwitch_5uqd44aqc2qi")
nodes/fragment/14/position = Vector2(-816, 648)
nodes/fragment/15/node = SubResource("VisualShaderNodeVectorOp_h3y1yoas3oyj")
nodes/fragment/15/position = Vector2(-864, 312)
nodes/fragment/16/node = SubResource("VisualShaderNodeVectorOp_cy04nybnpwtjs")
nodes/fragment/16/position = Vector2(-1272, 216)
nodes/fragment/17/node = SubResource("VisualShaderNodeVectorOp_1353q4jva2i6")
nodes/fragment/17/position = Vector2(-1608, 24)
nodes/fragment/18/node = SubResource("VisualShaderNodeExpression_b778ldr7wtm2l")
nodes/fragment/18/position = Vector2(-2040, -432)
nodes/fragment/18/size = Vector2(980, 290)
nodes/fragment/18/input_ports = "0,4,x;"
nodes/fragment/18/output_ports = "0,0,output0;"
nodes/fragment/18/expression = "//Custom:18(CameraDepthFade)
output0 = length(x);"
nodes/fragment/19/node = SubResource("VisualShaderNodeVectorOp_bola2ea53r735")
nodes/fragment/19/position = Vector2(-2328, -432)
nodes/fragment/20/node = SubResource("VisualShaderNodeInput_c1autd44ylk1k")
nodes/fragment/20/position = Vector2(-2688, -504)
nodes/fragment/21/node = SubResource("VisualShaderNodeExpression_b0o5sjjtvkv3y")
nodes/fragment/21/position = Vector2(-2712, -384)
nodes/fragment/21/size = Vector2(980, 670)
nodes/fragment/21/input_ports = ""
nodes/fragment/21/output_ports = "0,4,output0;1,3,output1;2,0,output2;"
nodes/fragment/21/expression = "//WorldPosition:21(CameraDepthFade)
output0 = ( INV_VIEW_MATRIX * vec4( VERTEX, 1.0)).xyz;
//UE has cm units and thinks Z is up, this fixes it
output0 = output0 * 100.0;
output0 = output0.xzy;
output1 = output0.xy;
output2 = output0.z;
"
nodes/fragment/22/node = SubResource("VisualShaderNodeDotProduct_bf5b08gx7l1wc")
nodes/fragment/22/position = Vector2(-1988, 98)
nodes/fragment/23/node = SubResource("VisualShaderNodeVectorFunc_3gxc4s1lvb7u")
nodes/fragment/23/position = Vector2(-2352, -240)
nodes/fragment/24/node = SubResource("VisualShaderNodeExpression_bpcimxu3s7qkt")
nodes/fragment/24/position = Vector2(-2516, 170)
nodes/fragment/24/size = Vector2(980, 390)
nodes/fragment/24/input_ports = "0,4,input0;"
nodes/fragment/24/output_ports = "0,4,output0;"
nodes/fragment/24/expression = "//Transform
//Unimplemented
output0 =  input0;
"
nodes/fragment/25/node = SubResource("VisualShaderNodeVec3Constant_dc6jysh7ogtty")
nodes/fragment/25/position = Vector2(-2972, 170)
nodes/fragment/26/node = SubResource("VisualShaderNodeFloatConstant_cornjgsk1bl1y")
nodes/fragment/26/position = Vector2(-2400, 1176)
nodes/fragment/27/node = SubResource("VisualShaderNodeFloatConstant_dicd4j8pgjcb3")
nodes/fragment/27/position = Vector2(-2400, 1512)
nodes/fragment/28/node = SubResource("VisualShaderNodeVectorOp_d257qaog37s6y")
nodes/fragment/28/position = Vector2(-1296, 1032)
nodes/fragment/29/node = SubResource("VisualShaderNodeFloatOp_4xdidbppbm5h")
nodes/fragment/29/position = Vector2(-1704, 936)
nodes/fragment/30/node = SubResource("VisualShaderNodeExpression_cmnbsi0t33xj3")
nodes/fragment/30/position = Vector2(-2136, 840)
nodes/fragment/30/size = Vector2(980, 260)
nodes/fragment/30/input_ports = ""
nodes/fragment/30/output_ports = "0,0,output0;"
nodes/fragment/30/expression = "//PixelDepth:30(CameraDepthFade)
output0 =  FRAGCOORD.z;
"
nodes/fragment/31/node = SubResource("VisualShaderNodeBooleanConstant_clssnexl8y5lt")
nodes/fragment/31/position = Vector2(-3024, 696)
nodes/fragment/32/node = SubResource("VisualShaderNodeFloatConstant_vx00hgplfwkb")
nodes/fragment/32/position = Vector2(-3048, 1440)
nodes/fragment/33/node = SubResource("VisualShaderNodeVectorOp_btjn1iki2wlxu")
nodes/fragment/33/position = Vector2(144, -720)
nodes/fragment/34/node = SubResource("VisualShaderNodeMix_btbvbk62depyw")
nodes/fragment/34/position = Vector2(-192, -816)
nodes/fragment/35/node = SubResource("VisualShaderNodeFloatConstant_dgvacc8bg8cbd")
nodes/fragment/35/position = Vector2(-456, -816)
nodes/fragment/36/node = SubResource("VisualShaderNodeFloatConstant_dnocogbjuujr5")
nodes/fragment/36/position = Vector2(-432, -696)
nodes/fragment/37/node = SubResource("VisualShaderNodeMix_b277hlbc3edn3")
nodes/fragment/37/position = Vector2(-504, -528)
nodes/fragment/38/node = SubResource("VisualShaderNodeExpression_be62unpqiec42")
nodes/fragment/38/position = Vector2(-792, -528)
nodes/fragment/38/size = Vector2(980, 340)
nodes/fragment/38/input_ports = "0,5,input0;"
nodes/fragment/38/output_ports = "0,0,output0;"
nodes/fragment/38/expression = "//ComponentMask:38(null)
output0 =  input0.r;
"
nodes/fragment/39/node = SubResource("VisualShaderNodeVectorOp_usfrm6pl2dsj")
nodes/fragment/39/position = Vector2(-1032, -504)
nodes/fragment/40/node = SubResource("VisualShaderNodeTexture_cufduw474wnme")
nodes/fragment/40/position = Vector2(-2472, -96)
nodes/fragment/41/node = SubResource("VisualShaderNodeMix_bj2ip43em05bk")
nodes/fragment/41/position = Vector2(-1752, 1224)
nodes/fragment/42/node = SubResource("VisualShaderNodeFloatConstant_5wpt4uvhwqev")
nodes/fragment/42/position = Vector2(-672, -384)
nodes/fragment/43/node = SubResource("VisualShaderNodeFloatConstant_df6oa0wtarulr")
nodes/fragment/43/position = Vector2(0, -576)
nodes/fragment/44/node = SubResource("VisualShaderNodeVectorOp_bj54wq4ltgayr")
nodes/fragment/44/position = Vector2(864, 1272)
nodes/fragment/45/node = SubResource("VisualShaderNodeExpression_b3ad4b8y1lwb8")
nodes/fragment/45/position = Vector2(528, 1152)
nodes/fragment/45/size = Vector2(980, 1250)
nodes/fragment/45/input_ports = "0,3,input0;1,0,input1;2,8,input2;"
nodes/fragment/45/output_ports = "0,4,output0;1,0,output1;2,0,output2;3,0,output3;4,0,output4;5,5,output5;"
nodes/fragment/45/expression = "//NormalTexture:45(null)
vec4 Normal45 = texture( input2, input0 );
Normal45 = Normal45 * vec4(2, 2, 2, 2) - vec4(1, 1, 1, 1);
output0 = Normal45.xyz;
output1 = Normal45.x;
output2 = Normal45.y;
output3 = Normal45.z;
output3 = Normal45.w;
output5 = Normal45;
"
nodes/fragment/46/node = SubResource("VisualShaderNodeTexture2DParameter_b3ad7ewp7o3pu")
nodes/fragment/46/position = Vector2(-312, 1152)
nodes/fragment/47/node = SubResource("VisualShaderNodeVectorOp_m8vgka63h150")
nodes/fragment/47/position = Vector2(240, 1152)
nodes/fragment/48/node = SubResource("VisualShaderNodeVec3Constant_cbm2pxnol6t1t")
nodes/fragment/48/position = Vector2(552, 1464)
nodes/fragment/49/node = SubResource("VisualShaderNodeClamp_dyi3b8rbovvy0")
nodes/fragment/49/position = Vector2(792, 168)
nodes/fragment/50/node = SubResource("VisualShaderNodeVectorOp_lgrjsg6h8jme")
nodes/fragment/50/position = Vector2(576, 168)
nodes/fragment/51/node = SubResource("VisualShaderNodeMix_bllgv6k4m38h")
nodes/fragment/51/position = Vector2(264, 48)
nodes/fragment/52/node = SubResource("VisualShaderNodeVectorOp_b3sy3iuboubkq")
nodes/fragment/52/position = Vector2(264, 408)
nodes/fragment/53/node = SubResource("VisualShaderNodeMix_baqcuake3evx4")
nodes/fragment/53/position = Vector2(-24, 384)
nodes/fragment/54/node = SubResource("VisualShaderNodeMix_kslvj12b8sos")
nodes/fragment/54/position = Vector2(-288, 312)
nodes/fragment/55/node = SubResource("VisualShaderNodeFloatConstant_c6j1fi4i3v86o")
nodes/fragment/55/position = Vector2(-312, 624)
nodes/fragment/66/node = SubResource("VisualShaderNodeMultiplyAdd_blp84701ep0xs")
nodes/fragment/66/position = Vector2(-240, 0)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 0, 3, 0, 2, 0, 4, 0, 3, 0, 5, 1, 4, 2, 6, 0, 5, 0, 7, 0, 3, 1, 4, 0, 7, 0, 8, 0, 3, 2, 9, 2, 8, 0, 10, 0, 9, 0, 11, 0, 10, 0, 12, 0, 11, 0, 13, 0, 8, 2, 14, 0, 13, 0, 15, 0, 14, 1, 16, 0, 15, 0, 17, 0, 16, 0, 18, 0, 17, 0, 19, 0, 18, 0, 20, 0, 19, 0, 21, 0, 19, 1, 22, 0, 17, 1, 23, 0, 22, 0, 19, 0, 23, 0, 24, 0, 22, 1, 25, 0, 24, 0, 26, 0, 16, 1, 32, 0, 15, 1, 28, 0, 14, 2, 29, 0, 28, 0, 30, 0, 29, 0, 26, 0, 29, 1, 32, 0, 28, 1, 31, 0, 14, 0, 33, 0, 2, 1, 34, 0, 33, 0, 35, 0, 34, 0, 36, 0, 34, 1, 37, 0, 34, 2, 38, 0, 37, 0, 39, 0, 38, 0, 40, 2, 39, 0, 11, 0, 40, 0, 41, 0, 39, 1, 9, 2, 41, 0, 13, 0, 41, 2, 42, 0, 37, 2, 43, 0, 33, 1, 49, 0, 0, 3, 50, 0, 49, 0, 51, 0, 50, 0, 40, 2, 51, 2, 52, 0, 50, 1, 53, 0, 52, 0, 54, 0, 53, 0, 9, 2, 54, 2, 55, 0, 53, 1, 13, 0, 53, 2, 44, 0, 66, 0, 45, 0, 44, 0, 46, 0, 45, 2, 47, 0, 45, 0, 11, 0, 47, 0, 48, 0, 44, 1, 66, 0, 0, 9)
